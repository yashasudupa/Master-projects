
.tmp/kernel.msp430f5529.o:     file format elf32-msp430

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 kernel.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .lower.text.TaskIdle	00000000 .lower.text.TaskIdle
00000000 l    d  .lower.text.remove_from_timeout_queue	00000000 .lower.text.remove_from_timeout_queue
00000000 l    d  .lower.text.os_initTasks	00000000 .lower.text.os_initTasks
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .lower.text.panic	00000000 .lower.text.panic
00000000 l    d  .lower.text.os_schedule	00000000 .lower.text.os_schedule
00000000 l    d  .lower.text.__syscall_mystery	00000000 .lower.text.__syscall_mystery
00000000 l    d  .lower.text.__syscall_CAS	00000000 .lower.text.__syscall_CAS
00000000 l    d  .lower.text.updateHead	00000000 .lower.text.updateHead
00000000 l    d  .lower.text.__syscall_waitEventUntil	00000000 .lower.text.__syscall_waitEventUntil
00000000 l    d  .lower.text.__syscall_setEvent	00000000 .lower.text.__syscall_setEvent
00000000 l    d  .lower.text.waitEventFor	00000000 .lower.text.waitEventFor
00000000 l    d  .lower.text.waitEventUntil	00000000 .lower.text.waitEventUntil
00000000 l    d  .lower.text.waitEvent	00000000 .lower.text.waitEvent
00000000 l    d  .lower.text.setEvent	00000000 .lower.text.setEvent
00000000 l    d  .lower.text.clearEvent	00000000 .lower.text.clearEvent
00000000 l    d  .lower.text.checkEvent	00000000 .lower.text.checkEvent
00000000 l    d  .lower.text.sleep	00000000 .lower.text.sleep
00000000 l    d  .lower.text.sleepUntil	00000000 .lower.text.sleepUntil
00000000 l    d  .lower.text.getResource	00000000 .lower.text.getResource
00000000 l    d  .lower.text.releaseResource	00000000 .lower.text.releaseResource
00000000 l    d  .lower.text.__syscall_getResource	00000000 .lower.text.__syscall_getResource
00000000 l    d  .lower.text.__syscall_releaseResource	00000000 .lower.text.__syscall_releaseResource
00000000 l    d  .os_idletask	00000000 .os_idletask
00000000 l     O .os_stacks	0000003c __stack_TaskIdle
00000000 l    d  .os_stacks	00000000 .os_stacks
00000000 l    d  .lower.bss	00000000 .lower.bss
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_line_end	00000000 .debug_line_end
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_line.lower.text.TaskIdle	00000000 .debug_line.lower.text.TaskIdle
00000000 l    d  .debug_line.lower.text.remove_from_timeout_queue	00000000 .debug_line.lower.text.remove_from_timeout_queue
00000000 l    d  .debug_line.lower.text.os_initTasks	00000000 .debug_line.lower.text.os_initTasks
00000000 l    d  .debug_line.lower.text.panic	00000000 .debug_line.lower.text.panic
00000000 l    d  .debug_line.lower.text.os_schedule	00000000 .debug_line.lower.text.os_schedule
00000000 l    d  .debug_line.lower.text.__syscall_mystery	00000000 .debug_line.lower.text.__syscall_mystery
00000000 l    d  .debug_line.lower.text.__syscall_CAS	00000000 .debug_line.lower.text.__syscall_CAS
00000000 l    d  .debug_line.lower.text.updateHead	00000000 .debug_line.lower.text.updateHead
00000000 l    d  .debug_line.lower.text.__syscall_waitEventUntil	00000000 .debug_line.lower.text.__syscall_waitEventUntil
00000000 l    d  .debug_line.lower.text.__syscall_setEvent	00000000 .debug_line.lower.text.__syscall_setEvent
00000000 l    d  .debug_line.lower.text.waitEventFor	00000000 .debug_line.lower.text.waitEventFor
00000000 l    d  .debug_line.lower.text.waitEventUntil	00000000 .debug_line.lower.text.waitEventUntil
00000000 l    d  .debug_line.lower.text.waitEvent	00000000 .debug_line.lower.text.waitEvent
00000000 l    d  .debug_line.lower.text.setEvent	00000000 .debug_line.lower.text.setEvent
00000000 l    d  .debug_line.lower.text.clearEvent	00000000 .debug_line.lower.text.clearEvent
00000000 l    d  .debug_line.lower.text.checkEvent	00000000 .debug_line.lower.text.checkEvent
00000000 l    d  .debug_line.lower.text.sleep	00000000 .debug_line.lower.text.sleep
00000000 l    d  .debug_line.lower.text.sleepUntil	00000000 .debug_line.lower.text.sleepUntil
00000000 l    d  .debug_line.lower.text.getResource	00000000 .debug_line.lower.text.getResource
00000000 l    d  .debug_line.lower.text.releaseResource	00000000 .debug_line.lower.text.releaseResource
00000000 l    d  .debug_line.lower.text.__syscall_getResource	00000000 .debug_line.lower.text.__syscall_getResource
00000000 l    d  .debug_line.lower.text.__syscall_releaseResource	00000000 .debug_line.lower.text.__syscall_releaseResource
00000000 l    d  .MSP430.attributes	00000000 .MSP430.attributes
00000000 g     F .lower.text.TaskIdle	00000004 TaskIdle
00000000         *UND*	00000000 __mulhi2_f5
00000000 g     F .lower.text.remove_from_timeout_queue	00000096 remove_from_timeout_queue
00000000         *UND*	00000000 os_timeoutQueue
00000000         *UND*	00000000 os_tasks
00000000         *UND*	00000000 os_timeoutQueueDirty
00000000 g     F .lower.text.os_initTasks	0000009a os_initTasks
00000000         *UND*	00000000 os_readyQueue
00000000         *UND*	00000000 os_taskCount
00000000         *UND*	00000000 insert_into_memberlist
00000000         *UND*	00000000 os_runningTask
00000000 g     F .lower.text.panic	00000022 panic
00000000         *UND*	00000000 smartPrintfWrapper
00000000 g     F .lower.text.os_schedule	000001b2 os_schedule
00000000         *UND*	00000000 getCurrentTime
00000000         *UND*	00000000 TA0CCR1
00000000         *UND*	00000000 remove_from_memberlist
00000000         *UND*	00000000 os_dispatcher
00000000 g     F .lower.text.__syscall_mystery	00000032 __syscall_mystery
00000000 g     F .lower.text.__syscall_CAS	00000014 __syscall_CAS
00000000 g     F .lower.text.updateHead	00000016 updateHead
00000000 g     F .lower.text.__syscall_waitEventUntil	00000102 __syscall_waitEventUntil
00000000         *UND*	00000000 insert_into_timeout_queue
00000000 g     F .lower.text.__syscall_setEvent	0000003a __syscall_setEvent
00000000 g     F .lower.text.waitEventFor	00000086 waitEventFor
00000000         *UND*	00000000 syscall_waitEventUntil
00000000 g     F .lower.text.waitEventUntil	00000006 waitEventUntil
00000000 g     F .lower.text.waitEvent	00000012 waitEvent
00000000 g     F .lower.text.setEvent	0000000a setEvent
00000000 g     F .lower.text.clearEvent	0000000a clearEvent
00000000 g     F .lower.text.checkEvent	00000016 checkEvent
00000000 g     F .lower.text.sleep	0000000c sleep
00000000 g     F .lower.text.sleepUntil	0000000e sleepUntil
00000000 g     F .lower.text.getResource	00000006 getResource
00000000         *UND*	00000000 syscall_getResource
00000000 g     F .lower.text.releaseResource	00000006 releaseResource
00000000         *UND*	00000000 syscall_releaseResource
00000000 g     F .lower.text.__syscall_getResource	00000094 __syscall_getResource
00000000 g     F .lower.text.__syscall_releaseResource	000000cc __syscall_releaseResource
00000000  w      .lower.bss	00000000 os_resources
00000006  w      .lower.bss	00000000 No_resources
00000000 g     O .os_idletask	00000036 __task_TaskIdle
00000008  w      .lower.bss	00000000 os_SP
0000000a  w      .lower.bss	00000000 os_irq_sysc



Disassembly of section .lower.text.TaskIdle:

00000000 <TaskIdle>:
   0:	30 40 00 00 	br	#0x0000		;

Disassembly of section .lower.text.remove_from_timeout_queue:

00000000 <remove_from_timeout_queue>:
   0:	6a 15       	pushm	#7,	r10	;16-bit words

00000002 <.LCFI0>:
   2:	45 4c       	mov.b	r12,	r5	;

00000004 <.Loc.97.1>:
   4:	58 42 00 00 	mov.b	&0x0000,r8	;0x0000

00000008 <.Loc.98.1>:
   8:	78 93       	cmp.b	#-1,	r8	;r3 As==11
   a:	00 24       	jz	$+2      	;abs 0xc

0000000c <.Loc.98.1>:
   c:	75 93       	cmp.b	#-1,	r5	;r3 As==11
   e:	00 24       	jz	$+2      	;abs 0x10

00000010 <.Loc.103.1>:
  10:	37 40 00 00 	mov	#0,	r7	;
  14:	34 40 00 00 	mov	#0,	r4	;
  18:	7d 40 36 00 	mov.b	#54,	r13	;#0x0036
  1c:	0c 48       	mov	r8,	r12	;

0000001e <.LVL3>:
  1e:	84 12       	call	r4		;

00000020 <.LVL4>:
  20:	0c 57       	add	r7,	r12	;
  22:	5a 4c 33 00 	mov.b	51(r12),r10	;0x00033

00000026 <.LVL5>:
  26:	09 47       	mov	r7,	r9	;
  28:	06 44       	mov	r4,	r6	;

0000002a <.Loc.104.1>:
  2a:	cc 95 1a 00 	cmp.b	r5,	26(r12)	; 0x001a
  2e:	00 24       	jz	$+2      	;abs 0x30

00000030 <.Loc.115.1>:
  30:	77 40 36 00 	mov.b	#54,	r7	;#0x0036

00000034 <.L6>:
  34:	7a 93       	cmp.b	#-1,	r10	;r3 As==11
  36:	00 24       	jz	$+2      	;abs 0x38

00000038 <.LVL7>:
  38:	0d 47       	mov	r7,	r13	;
  3a:	0c 4a       	mov	r10,	r12	;
  3c:	86 12       	call	r6		;
  3e:	0c 59       	add	r9,	r12	;
  40:	cc 95 1a 00 	cmp.b	r5,	26(r12)	; 0x001a
  44:	00 20       	jnz	$+2      	;abs 0x46

00000046 <.Loc.117.1>:
  46:	57 4c 33 00 	mov.b	51(r12),r7	;0x00033
  4a:	7d 40 36 00 	mov.b	#54,	r13	;#0x0036
  4e:	0c 48       	mov	r8,	r12	;
  50:	86 12       	call	r6		;
  52:	0c 59       	add	r9,	r12	;
  54:	cc 47 33 00 	mov.b	r7,	51(r12)	; 0x0033

00000058 <.Loc.118.1>:
  58:	7d 40 36 00 	mov.b	#54,	r13	;#0x0036
  5c:	0c 4a       	mov	r10,	r12	;
  5e:	86 12       	call	r6		;
  60:	0c 59       	add	r9,	r12	;
  62:	fc 43 33 00 	mov.b	#-1,	51(r12)	;r3 As==11, 0x0033

00000066 <.Loc.119.1>:
  66:	30 40 00 00 	br	#0x0000		;

0000006a <.L5>:
  6a:	c2 4a 00 00 	mov.b	r10,	&0x0000	;

0000006e <.Loc.107.1>:
  6e:	7d 40 36 00 	mov.b	#54,	r13	;#0x0036
  72:	0c 48       	mov	r8,	r12	;

00000074 <.LVL12>:
  74:	84 12       	call	r4		;
  76:	0c 57       	add	r7,	r12	;
  78:	fc 43 33 00 	mov.b	#-1,	51(r12)	;r3 As==11, 0x0033

0000007c <.Loc.108.1>:
  7c:	d2 43 00 00 	mov.b	#1,	&0x0000	;r3 As==01

00000080 <.L3>:
  80:	64 17       	popm	#7,	r10	;16-bit words
  82:	30 41       	ret			

00000084 <.L7>:
  84:	0d 47       	mov	r7,	r13	;
  86:	0c 4a       	mov	r10,	r12	;
  88:	86 12       	call	r6		;
  8a:	0c 59       	add	r9,	r12	;

0000008c <.LVL17>:
  8c:	08 4a       	mov	r10,	r8	;

0000008e <.LVL18>:
  8e:	5a 4c 33 00 	mov.b	51(r12),r10	;0x00033

00000092 <.LVL19>:
  92:	30 40 00 00 	br	#0x0000		;

Disassembly of section .lower.text.os_initTasks:

00000000 <os_initTasks>:
   0:	4a 15       	pushm	#5,	r10	;16-bit words

00000002 <.LCFI1>:
   2:	f2 43 00 00 	mov.b	#-1,	&0x0000	;r3 As==11

00000006 <.Loc.130.1>:
   6:	c2 43 00 00 	mov.b	#0,	&0x0000	;r3 As==00

0000000a <.Loc.131.1>:
   a:	f2 43 00 00 	mov.b	#-1,	&0x0000	;r3 As==11

0000000e <.LVL20>:
   e:	3a 40 00 00 	mov	#0,	r10	;

00000012 <.LBB2>:
  12:	49 43       	clr.b	r9		;
  14:	58 42 00 00 	mov.b	&0x0000,r8	;0x0000

00000018 <.Loc.145.1>:
  18:	37 40 00 00 	mov	#0,	r7	;

0000001c <.Loc.151.1>:
  1c:	36 40 00 00 	mov	#0,	r6	;

00000020 <.L16>:
  20:	09 98       	cmp	r8,	r9	;
  22:	00 38       	jl	$+2      	;abs 0x24

00000024 <.LBE2>:
  24:	5c 43       	mov.b	#1,	r12	;r3 As==01
  26:	46 17       	popm	#5,	r10	;16-bit words
  28:	30 41       	ret			

0000002a <.L20>:
  2a:	1d 4a 26 00 	mov	38(r10),r13	;0x00026
  2e:	9d 4a 34 00 	mov	52(r10),0(r13)	;0x00034
  32:	00 00 

00000034 <.Loc.135.1>:
  34:	bd 42 fe ff 	mov	#8,	-2(r13)	;r2 As==11, 0xfffe

00000038 <.Loc.136.1>:
  38:	4c 49       	mov.b	r9,	r12	;
  3a:	ca 4c 1a 00 	mov.b	r12,	26(r10)	; 0x001a

0000003e <.Loc.137.1>:
  3e:	fa 43 33 00 	mov.b	#-1,	51(r10)	;r3 As==11, 0x0033

00000042 <.LBB3>:
  42:	1e 4a 24 00 	mov	36(r10),r14	;0x00024

00000046 <.LVL22>:
  46:	0f 4d       	mov	r13,	r15	;
  48:	3f 50 fc ff 	add	#65532,	r15	;#0xfffc

0000004c <.L17>:
  4c:	0e 9f       	cmp	r15,	r14	;
  4e:	00 28       	jnc	$+2      	;abs 0x50

00000050 <.LBE3>:
  50:	3d 50 fe ff 	add	#65534,	r13	;#0xfffe
  54:	8a 4d 00 00 	mov	r13,	0(r10)	;

00000058 <.Loc.145.1>:
  58:	3d 40 00 00 	mov	#0,	r13	;
  5c:	87 12       	call	r7		;

0000005e <.LBB4>:
  5e:	5c 43       	mov.b	#1,	r12	;r3 As==01

00000060 <.L19>:
  60:	0d 4c       	mov	r12,	r13	;
  62:	0d 5c       	add	r12,	r13	;
  64:	0d 5a       	add	r10,	r13	;
  66:	8d 43 00 00 	mov	#0,	0(r13)	;r3 As==00

0000006a <.Loc.147.1>:
  6a:	1c 53       	inc	r12		;
  6c:	3c 90 0d 00 	cmp	#13,	r12	;#0x000d
  70:	00 20       	jnz	$+2      	;abs 0x72

00000072 <.LBE4>:
  72:	7d 40 36 00 	mov.b	#54,	r13	;#0x0036
  76:	5c 42 00 00 	mov.b	&0x0000,r12	;0x0000

0000007a <.LVL26>:
  7a:	86 12       	call	r6		;
  7c:	3c 50 00 00 	add	#0,	r12	;
  80:	82 4c 00 00 	mov	r12,	&0x0000	;

00000084 <.Loc.132.1>:
  84:	19 53       	inc	r9		;
  86:	3a 50 36 00 	add	#54,	r10	;#0x0036
  8a:	30 40 00 00 	br	#0x0000		;

0000008e <.L18>:
  8e:	be 40 5a a5 	mov	#42330,	0(r14)	;#0xa55a
  92:	00 00 

00000094 <.Loc.139.1>:
  94:	2e 53       	incd	r14		;
  96:	30 40 00 00 	br	#0x0000		;

Disassembly of section .lower.text.panic:

00000000 <panic>:
   0:	1a 15       	pushm	#2,	r10	;16-bit words

00000002 <.LCFI2>:
   2:	21 82       	sub	#4,	r1	;r2 As==10

00000004 <.LCFI3>:
   4:	39 40 00 00 	mov	#0,	r9	;
   8:	3a 40 00 00 	mov	#0,	r10	;

0000000c <.L23>:
   c:	1c 42 00 00 	mov	&0x0000,r12	;0x0000
  10:	5c 4c 1a 00 	mov.b	26(r12),r12	;0x0001a
  14:	81 4c 02 00 	mov	r12,	2(r1)	;
  18:	81 49 00 00 	mov	r9,	0(r1)	;
  1c:	8a 12       	call	r10		;

0000001e <.LVL31>:
  1e:	30 40 00 00 	br	#0x0000		;

Disassembly of section .lower.text.os_schedule:

00000000 <os_schedule>:
   0:	6a 15       	pushm	#7,	r10	;16-bit words

00000002 <.LCFI4>:
   2:	31 80 0c 00 	sub	#12,	r1	;#0x000c

00000006 <.LCFI5>:
   6:	0c 41       	mov	r1,	r12	;
   8:	2c 52       	add	#4,	r12	;r2 As==10
   a:	b0 12 00 00 	call	#0		;

0000000e <.LVL32>:
   e:	5a 42 00 00 	mov.b	&0x0000,r10	;0x0000

00000012 <.Loc.169.1>:
  12:	7a 93       	cmp.b	#-1,	r10	;r3 As==11
  14:	00 20       	jnz	$+2      	;abs 0x16

00000016 <.L29>:
  16:	59 42 00 00 	mov.b	&0x0000,r9	;0x0000
  1a:	79 93       	cmp.b	#-1,	r9	;r3 As==11
  1c:	00 20       	jnz	$+2      	;abs 0x1e

0000001e <.L39>:
  1e:	b2 40 00 f0 	mov	#61440,	&0x0000	;#0xf000
  22:	00 00 
  24:	30 40 00 00 	br	#0x0000		;

00000028 <.L31>:
  28:	7d 40 36 00 	mov.b	#54,	r13	;#0x0036
  2c:	0c 4a       	mov	r10,	r12	;
  2e:	8f 12       	call	r15		;
  30:	0c 57       	add	r7,	r12	;
  32:	bc 90 ff 00 	cmp	#255,	40(r12)	;#0x00ff, 0x0028
  36:	28 00 
  38:	00 24       	jz	$+2      	;abs 0x3a

0000003a <.Loc.176.1>:
  3a:	4c 4a       	mov.b	r10,	r12	;
  3c:	b0 12 00 00 	call	#0		;

00000040 <.L28>:
  40:	4c 4a       	mov.b	r10,	r12	;
  42:	b0 12 00 00 	call	#0		;

00000046 <.LVL38>:
  46:	3d 40 00 00 	mov	#0,	r13	;
  4a:	4c 4a       	mov.b	r10,	r12	;
  4c:	b0 12 00 00 	call	#0		;

00000050 <.LVL39>:
  50:	5a 42 00 00 	mov.b	&0x0000,r10	;0x0000

00000054 <.LVL40>:
  54:	7a 93       	cmp.b	#-1,	r10	;r3 As==11
  56:	00 24       	jz	$+2      	;abs 0x58

00000058 <.L51>:
  58:	3f 40 00 00 	mov	#0,	r15	;
  5c:	7d 40 36 00 	mov.b	#54,	r13	;#0x0036
  60:	0c 4a       	mov	r10,	r12	;
  62:	81 4f 00 00 	mov	r15,	0(r1)	;
  66:	8f 12       	call	r15		;

00000068 <.LVL42>:
  68:	0c 58       	add	r8,	r12	;
  6a:	15 4c 2c 00 	mov	44(r12),r5	;0x0002c
  6e:	14 4c 2e 00 	mov	46(r12),r4	;0x0002e
  72:	1b 4c 30 00 	mov	48(r12),r11	;0x00030
  76:	3c 50 2a 00 	add	#42,	r12	;#0x002a
  7a:	36 43       	mov	#-1,	r6	;r3 As==11
  7c:	2d 4c       	mov	@r12,	r13	;
  7e:	3d 50 e7 ff 	add	#65511,	r13	;#0xffe7
  82:	81 4d 02 00 	mov	r13,	2(r1)	;
  86:	0e 49       	mov	r9,	r14	;
  88:	2f 41       	mov	@r1,	r15	;
  8a:	7d 40 18 00 	mov.b	#24,	r13	;#0x0018
  8e:	2d 9c       	cmp	@r12,	r13	;
  90:	00 28       	jnc	$+2      	;abs 0x92
  92:	4e 43       	clr.b	r14		;

00000094 <.L32>:
  94:	0d 45       	mov	r5,	r13	;
  96:	0d 56       	add	r6,	r13	;
  98:	5c 43       	mov.b	#1,	r12	;r3 As==01
  9a:	0d 95       	cmp	r5,	r13	;
  9c:	00 28       	jnc	$+2      	;abs 0x9e
  9e:	4c 43       	clr.b	r12		;

000000a0 <.L33>:
  a0:	0e 5d       	add	r13,	r14	;
  a2:	05 49       	mov	r9,	r5	;
  a4:	0e 9d       	cmp	r13,	r14	;
  a6:	00 28       	jnc	$+2      	;abs 0xa8
  a8:	45 43       	clr.b	r5		;

000000aa <.L34>:
  aa:	0c d5       	bis	r5,	r12	;
  ac:	05 44       	mov	r4,	r5	;
  ae:	05 56       	add	r6,	r5	;
  b0:	5d 43       	mov.b	#1,	r13	;r3 As==01
  b2:	05 94       	cmp	r4,	r5	;
  b4:	00 28       	jnc	$+2      	;abs 0xb6
  b6:	4d 43       	clr.b	r13		;

000000b8 <.L35>:
  b8:	0c 55       	add	r5,	r12	;
  ba:	04 49       	mov	r9,	r4	;
  bc:	0c 95       	cmp	r5,	r12	;
  be:	00 28       	jnc	$+2      	;abs 0xc0
  c0:	44 43       	clr.b	r4		;

000000c2 <.L36>:
  c2:	0d d4       	bis	r4,	r13	;
  c4:	0b 56       	add	r6,	r11	;
  c6:	0d 5b       	add	r11,	r13	;
  c8:	81 9d 0a 00 	cmp	r13,	10(r1)	; 0x000a
  cc:	00 28       	jnc	$+2      	;abs 0xce
  ce:	81 9d 0a 00 	cmp	r13,	10(r1)	; 0x000a
  d2:	00 20       	jnz	$+2      	;abs 0xd4
  d4:	81 9c 08 00 	cmp	r12,	8(r1)	;
  d8:	00 28       	jnc	$+2      	;abs 0xda
  da:	81 9c 08 00 	cmp	r12,	8(r1)	;
  de:	00 20       	jnz	$+2      	;abs 0xe0
  e0:	81 9e 06 00 	cmp	r14,	6(r1)	;
  e4:	00 28       	jnc	$+2      	;abs 0xe6
  e6:	81 9e 06 00 	cmp	r14,	6(r1)	;
  ea:	00 20       	jnz	$+2      	;abs 0xec
  ec:	91 91 02 00 	cmp	2(r1),	4(r1)	;
  f0:	04 00 
  f2:	00 2c       	jc	$+2      	;abs 0xf4
  f4:	30 40 00 00 	br	#0x0000		;

000000f8 <.L30>:
  f8:	38 40 00 00 	mov	#0,	r8	;
  fc:	59 43       	mov.b	#1,	r9	;r3 As==01
  fe:	07 48       	mov	r8,	r7	;
 100:	30 40 00 00 	br	#0x0000		;

00000104 <.L50>:
 104:	3a 40 00 00 	mov	#0,	r10	;
 108:	7d 40 36 00 	mov.b	#54,	r13	;#0x0036
 10c:	5c 42 00 00 	mov.b	&0x0000,r12	;0x0000
 110:	8a 12       	call	r10		;

00000112 <.LVL45>:
 112:	3c 50 00 00 	add	#0,	r12	;
 116:	82 4c 00 00 	mov	r12,	&0x0000	;

0000011a <.Loc.198.1>:
 11a:	7d 40 36 00 	mov.b	#54,	r13	;#0x0036
 11e:	0c 49       	mov	r9,	r12	;
 120:	8a 12       	call	r10		;

00000122 <.LVL46>:
 122:	3c 50 00 00 	add	#0,	r12	;
 126:	3c 50 2a 00 	add	#42,	r12	;#0x002a
 12a:	2d 4c       	mov	@r12,	r13	;
 12c:	19 4c 02 00 	mov	2(r12),	r9	;
 130:	18 4c 04 00 	mov	4(r12),	r8	;
 134:	1f 4c 06 00 	mov	6(r12),	r15	;
 138:	15 41 06 00 	mov	6(r1),	r5	;
 13c:	16 41 08 00 	mov	8(r1),	r6	;
 140:	17 41 0a 00 	mov	10(r1),	r7	;0x0000a
 144:	0e 4d       	mov	r13,	r14	;
 146:	1e 81 04 00 	sub	4(r1),	r14	;
 14a:	5a 43       	mov.b	#1,	r10	;r3 As==01
 14c:	0d 9e       	cmp	r14,	r13	;
 14e:	00 28       	jnc	$+2      	;abs 0x150
 150:	4a 43       	clr.b	r10		;

00000152 <.L40>:
 152:	0c 49       	mov	r9,	r12	;
 154:	0c 85       	sub	r5,	r12	;
 156:	5d 43       	mov.b	#1,	r13	;r3 As==01
 158:	09 9c       	cmp	r12,	r9	;
 15a:	00 28       	jnc	$+2      	;abs 0x15c
 15c:	4d 43       	clr.b	r13		;

0000015e <.L41>:
 15e:	09 4c       	mov	r12,	r9	;
 160:	09 8a       	sub	r10,	r9	;
 162:	5a 43       	mov.b	#1,	r10	;r3 As==01
 164:	0c 99       	cmp	r9,	r12	;
 166:	00 28       	jnc	$+2      	;abs 0x168
 168:	4a 43       	clr.b	r10		;

0000016a <.L42>:
 16a:	0d da       	bis	r10,	r13	;
 16c:	0a 48       	mov	r8,	r10	;
 16e:	0a 86       	sub	r6,	r10	;
 170:	5c 43       	mov.b	#1,	r12	;r3 As==01
 172:	08 9a       	cmp	r10,	r8	;
 174:	00 28       	jnc	$+2      	;abs 0x176
 176:	4c 43       	clr.b	r12		;

00000178 <.L43>:
 178:	08 4a       	mov	r10,	r8	;
 17a:	08 8d       	sub	r13,	r8	;
 17c:	5d 43       	mov.b	#1,	r13	;r3 As==01
 17e:	0a 98       	cmp	r8,	r10	;
 180:	00 28       	jnc	$+2      	;abs 0x182
 182:	4d 43       	clr.b	r13		;

00000184 <.L44>:
 184:	0c dd       	bis	r13,	r12	;
 186:	0d 4f       	mov	r15,	r13	;
 188:	0d 87       	sub	r7,	r13	;
 18a:	0d 9c       	cmp	r12,	r13	;
 18c:	00 20       	jnz	$+2      	;abs 0x18e
 18e:	08 93       	cmp	#0,	r8	;r3 As==00
 190:	00 20       	jnz	$+2      	;abs 0x192
 192:	09 93       	cmp	#0,	r9	;r3 As==00
 194:	00 20       	jnz	$+2      	;abs 0x196
 196:	3c 40 ff ef 	mov	#61439,	r12	;#0xefff
 19a:	0c 9e       	cmp	r14,	r12	;
 19c:	00 28       	jnc	$+2      	;abs 0x19e

0000019e <.Loc.201.1>:
 19e:	82 4e 00 00 	mov	r14,	&0x0000	;

000001a2 <.L38>:
 1a2:	c2 43 00 00 	mov.b	#0,	&0x0000	;r3 As==00

000001a6 <.Loc.209.1>:
 1a6:	b0 12 00 00 	call	#0		;

000001aa <.LVL47>:
 1aa:	31 50 0c 00 	add	#12,	r1	;#0x000c
 1ae:	64 17       	popm	#7,	r10	;16-bit words
 1b0:	30 41       	ret			

Disassembly of section .lower.text.__syscall_mystery:

00000000 <__syscall_mystery>:
   0:	1c 42 00 00 	mov	&0x0000,r12	;0x0000
   4:	5c 4c 1a 00 	mov.b	26(r12),r12	;0x0001a
   8:	b0 12 00 00 	call	#0		;

0000000c <.LVL48>:
   c:	3d 40 00 00 	mov	#0,	r13	;
  10:	1c 42 00 00 	mov	&0x0000,r12	;0x0000
  14:	5c 4c 1a 00 	mov.b	26(r12),r12	;0x0001a
  18:	b0 12 00 00 	call	#0		;

0000001c <.LVL49>:
  1c:	7d 40 36 00 	mov.b	#54,	r13	;#0x0036
  20:	5c 42 00 00 	mov.b	&0x0000,r12	;0x0000
  24:	b0 12 00 00 	call	#0		;
  28:	3c 50 00 00 	add	#0,	r12	;
  2c:	82 4c 00 00 	mov	r12,	&0x0000	;

00000030 <.Loc.217.1>:
  30:	30 41       	ret			

Disassembly of section .lower.text.__syscall_CAS:

00000000 <__syscall_CAS>:
   0:	8c 9d 00 00 	cmp	r13,	0(r12)	;
   4:	00 20       	jnz	$+2      	;abs 0x6

00000006 <.Loc.223.1>:
   6:	8c 4e 00 00 	mov	r14,	0(r12)	;

0000000a <.Loc.226.1>:
   a:	5c 43       	mov.b	#1,	r12	;r3 As==01

0000000c <.L54>:
   c:	30 41       	ret			

0000000e <.L55>:
   e:	4c 43       	clr.b	r12		;

00000010 <.LVL54>:
  10:	30 40 00 00 	br	#0x0000		;

Disassembly of section .lower.text.updateHead:

00000000 <updateHead>:
   0:	7d 40 36 00 	mov.b	#54,	r13	;#0x0036
   4:	5c 42 00 00 	mov.b	&0x0000,r12	;0x0000
   8:	b0 12 00 00 	call	#0		;
   c:	3c 50 00 00 	add	#0,	r12	;
  10:	82 4c 00 00 	mov	r12,	&0x0000	;

00000014 <.Loc.236.1>:
  14:	30 41       	ret			

Disassembly of section .lower.text.__syscall_waitEventUntil:

00000000 <__syscall_waitEventUntil>:
   0:	6a 15       	pushm	#7,	r10	;16-bit words

00000002 <.LCFI6>:
   2:	31 82       	sub	#8,	r1	;r2 As==11

00000004 <.LCFI7>:
   4:	08 4c       	mov	r12,	r8	;
   6:	0a 4d       	mov	r13,	r10	;

00000008 <.Loc.240.1>:
   8:	1c 42 00 00 	mov	&0x0000,r12	;0x0000

0000000c <.LVL57>:
   c:	cc 93 20 00 	cmp.b	#0,	32(r12)	;r3 As==00, 0x0020
  10:	00 24       	jz	$+2      	;abs 0x12

00000012 <.L86>:
  12:	4c 43       	clr.b	r12		;
  14:	30 40 00 00 	br	#0x0000		;

00000018 <.L58>:
  18:	08 93       	cmp	#0,	r8	;r3 As==00
  1a:	00 24       	jz	$+2      	;abs 0x1c

0000001c <.Loc.247.1>:
  1c:	d8 93 00 00 	cmp.b	#1,	0(r8)	;r3 As==01
  20:	00 20       	jnz	$+2      	;abs 0x22

00000022 <.Loc.249.1>:
  22:	c8 43 00 00 	mov.b	#0,	0(r8)	;r3 As==00

00000026 <.LVL60>:
  26:	5c 43       	mov.b	#1,	r12	;r3 As==01

00000028 <.L84>:
  28:	31 52       	add	#8,	r1	;r2 As==11
  2a:	64 17       	popm	#7,	r10	;16-bit words
  2c:	30 41       	ret			

0000002e <.L60>:
  2e:	59 4c 1a 00 	mov.b	26(r12),r9	;0x0001a

00000032 <.Loc.253.1>:
  32:	79 93       	cmp.b	#-1,	r9	;r3 As==11
  34:	00 24       	jz	$+2      	;abs 0x36

00000036 <.Loc.255.1>:
  36:	0a 93       	cmp	#0,	r10	;r3 As==00
  38:	00 20       	jnz	$+2      	;abs 0x3a

0000003a <.L68>:
  3a:	4c 49       	mov.b	r9,	r12	;
  3c:	b0 12 00 00 	call	#0		;

00000040 <.LVL63>:
  40:	2a 93       	cmp	#2,	r10	;r3 As==10
  42:	00 20       	jnz	$+2      	;abs 0x44

00000044 <.Loc.273.1>:
  44:	08 93       	cmp	#0,	r8	;r3 As==00
  46:	00 20       	jnz	$+2      	;abs 0x48
  48:	30 40 00 00 	br	#0x0000		;

0000004c <.L62>:
  4c:	0c 41       	mov	r1,	r12	;

0000004e <.LVL65>:
  4e:	b0 12 00 00 	call	#0		;

00000052 <.LVL66>:
  52:	2a 93       	cmp	#2,	r10	;r3 As==10
  54:	00 20       	jnz	$+2      	;abs 0x56

00000056 <.Loc.259.1>:
  56:	7d 40 36 00 	mov.b	#54,	r13	;#0x0036
  5a:	0c 49       	mov	r9,	r12	;
  5c:	b0 12 00 00 	call	#0		;
  60:	3c 50 00 00 	add	#0,	r12	;
  64:	3c 50 2a 00 	add	#42,	r12	;#0x002a
  68:	2f 4c       	mov	@r12,	r15	;
  6a:	1d 4c 02 00 	mov	2(r12),	r13	;
  6e:	1e 4c 04 00 	mov	4(r12),	r14	;
  72:	1c 4c 06 00 	mov	6(r12),	r12	;

00000076 <.L66>:
  76:	81 9c 06 00 	cmp	r12,	6(r1)	;
  7a:	00 28       	jnc	$+2      	;abs 0x7c
  7c:	81 9c 06 00 	cmp	r12,	6(r1)	;
  80:	00 20       	jnz	$+2      	;abs 0x82
  82:	81 9e 04 00 	cmp	r14,	4(r1)	;
  86:	00 28       	jnc	$+2      	;abs 0x88
  88:	81 9e 04 00 	cmp	r14,	4(r1)	;
  8c:	00 20       	jnz	$+2      	;abs 0x8e
  8e:	81 9d 02 00 	cmp	r13,	2(r1)	;
  92:	00 28       	jnc	$+2      	;abs 0x94
  94:	81 9d 02 00 	cmp	r13,	2(r1)	;
  98:	00 20       	jnz	$+2      	;abs 0x9a
  9a:	81 9f 00 00 	cmp	r15,	0(r1)	;
  9e:	00 28       	jnc	$+2      	;abs 0xa0
  a0:	30 40 00 00 	br	#0x0000		;

000000a4 <.L65>:
  a4:	2f 4a       	mov	@r10,	r15	;
  a6:	1d 4a 02 00 	mov	2(r10),	r13	;
  aa:	1e 4a 04 00 	mov	4(r10),	r14	;
  ae:	1c 4a 06 00 	mov	6(r10),	r12	;

000000b2 <.LVL70>:
  b2:	30 40 00 00 	br	#0x0000		;

000000b6 <.L63>:
  b6:	24 4a       	mov	@r10,	r4	;
  b8:	15 4a 02 00 	mov	2(r10),	r5	;
  bc:	16 4a 04 00 	mov	4(r10),	r6	;
  c0:	17 4a 06 00 	mov	6(r10),	r7	;
  c4:	7d 40 36 00 	mov.b	#54,	r13	;#0x0036
  c8:	0c 49       	mov	r9,	r12	;
  ca:	b0 12 00 00 	call	#0		;
  ce:	3c 50 00 00 	add	#0,	r12	;
  d2:	3c 50 2a 00 	add	#42,	r12	;#0x002a
  d6:	8c 44 00 00 	mov	r4,	0(r12)	;
  da:	8c 45 02 00 	mov	r5,	2(r12)	;
  de:	8c 46 04 00 	mov	r6,	4(r12)	;
  e2:	8c 47 06 00 	mov	r7,	6(r12)	;

000000e6 <.Loc.273.1>:
  e6:	08 93       	cmp	#0,	r8	;r3 As==00
  e8:	00 24       	jz	$+2      	;abs 0xea

000000ea <.L70>:
  ea:	0d 48       	mov	r8,	r13	;
  ec:	1d 53       	inc	r13		;
  ee:	4c 49       	mov.b	r9,	r12	;
  f0:	b0 12 00 00 	call	#0		;

000000f4 <.L69>:
  f4:	0a 93       	cmp	#0,	r10	;r3 As==00
  f6:	00 24       	jz	$+2      	;abs 0xf8

000000f8 <.L71>:
  f8:	4c 49       	mov.b	r9,	r12	;
  fa:	b0 12 00 00 	call	#0		;

000000fe <.LVL74>:
  fe:	30 40 00 00 	br	#0x0000		;

Disassembly of section .lower.text.__syscall_setEvent:

00000000 <__syscall_setEvent>:
   0:	0a 15       	pushm	#1,	r10	;16-bit words

00000002 <.LCFI8>:
   2:	5a 4c 01 00 	mov.b	1(r12),	r10	;
   6:	7a 93       	cmp.b	#-1,	r10	;r3 As==11
   8:	00 20       	jnz	$+2      	;abs 0xa

0000000a <.Loc.290.1>:
   a:	dc 43 00 00 	mov.b	#1,	0(r12)	;r3 As==01

0000000e <.L87>:
   e:	0a 17       	popm	#1,	r10	;16-bit words
  10:	30 41       	ret			

00000012 <.L88>:
  12:	4c 4a       	mov.b	r10,	r12	;

00000014 <.LVL78>:
  14:	b0 12 00 00 	call	#0		;

00000018 <.LVL79>:
  18:	4c 4a       	mov.b	r10,	r12	;
  1a:	b0 12 00 00 	call	#0		;

0000001e <.LVL80>:
  1e:	3d 40 00 00 	mov	#0,	r13	;
  22:	4c 4a       	mov.b	r10,	r12	;
  24:	b0 12 00 00 	call	#0		;

00000028 <.LVL81>:
  28:	7d 40 36 00 	mov.b	#54,	r13	;#0x0036
  2c:	0c 4a       	mov	r10,	r12	;
  2e:	b0 12 00 00 	call	#0		;
  32:	9c 43 00 00 	mov	#1,	0(r12)	;r3 As==01

00000036 <.LBE7>:
  36:	30 40 00 00 	br	#0x0000		;

Disassembly of section .lower.text.waitEventFor:

00000000 <waitEventFor>:
   0:	3a 15       	pushm	#4,	r10	;16-bit words

00000002 <.LCFI9>:
   2:	31 82       	sub	#8,	r1	;r2 As==11

00000004 <.LCFI10>:
   4:	0a 4c       	mov	r12,	r10	;
   6:	09 4d       	mov	r13,	r9	;
   8:	07 4e       	mov	r14,	r7	;

0000000a <.Loc.305.1>:
   a:	0c 41       	mov	r1,	r12	;

0000000c <.LVL84>:
   c:	b0 12 00 00 	call	#0		;

00000010 <.LVL85>:
  10:	7d 40 36 00 	mov.b	#54,	r13	;#0x0036
  14:	1c 42 00 00 	mov	&0x0000,r12	;0x0000
  18:	5c 4c 1a 00 	mov.b	26(r12),r12	;0x0001a
  1c:	b0 12 00 00 	call	#0		;
  20:	3c 50 00 00 	add	#0,	r12	;
  24:	3c 50 2a 00 	add	#42,	r12	;#0x002a
  28:	0d 49       	mov	r9,	r13	;
  2a:	1f 41 02 00 	mov	2(r1),	r15	;
  2e:	19 41 04 00 	mov	4(r1),	r9	;
  32:	18 41 06 00 	mov	6(r1),	r8	;
  36:	0b 4d       	mov	r13,	r11	;
  38:	2b 51       	add	@r1,	r11	;
  3a:	5e 43       	mov.b	#1,	r14	;r3 As==01
  3c:	0b 9d       	cmp	r13,	r11	;
  3e:	00 28       	jnc	$+2      	;abs 0x40
  40:	4e 43       	clr.b	r14		;

00000042 <.L91>:
  42:	0f 57       	add	r7,	r15	;
  44:	5d 43       	mov.b	#1,	r13	;r3 As==01
  46:	0f 97       	cmp	r7,	r15	;
  48:	00 28       	jnc	$+2      	;abs 0x4a
  4a:	4d 43       	clr.b	r13		;

0000004c <.L92>:
  4c:	0e 5f       	add	r15,	r14	;
  4e:	57 43       	mov.b	#1,	r7	;r3 As==01
  50:	0e 9f       	cmp	r15,	r14	;
  52:	00 28       	jnc	$+2      	;abs 0x54
  54:	47 43       	clr.b	r7		;

00000056 <.L93>:
  56:	0d d7       	bis	r7,	r13	;
  58:	4f 43       	clr.b	r15		;
  5a:	0d 59       	add	r9,	r13	;
  5c:	57 43       	mov.b	#1,	r7	;r3 As==01
  5e:	0d 99       	cmp	r9,	r13	;
  60:	00 28       	jnc	$+2      	;abs 0x62
  62:	07 4f       	mov	r15,	r7	;

00000064 <.L95>:
  64:	0f d7       	bis	r7,	r15	;
  66:	8c 4b 00 00 	mov	r11,	0(r12)	;
  6a:	8c 4e 02 00 	mov	r14,	2(r12)	;
  6e:	8c 4d 04 00 	mov	r13,	4(r12)	;
  72:	0f 58       	add	r8,	r15	;
  74:	8c 4f 06 00 	mov	r15,	6(r12)	;

00000078 <.Loc.309.1>:
  78:	6d 43       	mov.b	#2,	r13	;r3 As==10
  7a:	0c 4a       	mov	r10,	r12	;
  7c:	b0 12 00 00 	call	#0		;

00000080 <.LVL87>:
  80:	31 52       	add	#8,	r1	;r2 As==11
  82:	37 17       	popm	#4,	r10	;16-bit words
  84:	30 41       	ret			

Disassembly of section .lower.text.waitEventUntil:

00000000 <waitEventUntil>:
   0:	b0 12 00 00 	call	#0		;

00000004 <.LVL89>:
   4:	30 41       	ret			

Disassembly of section .lower.text.waitEvent:

00000000 <waitEvent>:
   0:	0c 93       	cmp	#0,	r12	;r3 As==00
   2:	00 24       	jz	$+2      	;abs 0x4

00000004 <.Loc.327.1>:
   4:	4d 43       	clr.b	r13		;
   6:	b0 12 00 00 	call	#0		;

0000000a <.LVL92>:
   a:	8c 11       	sxt	r12		;

0000000c <.L98>:
   c:	30 41       	ret			

0000000e <.L99>:
   e:	30 40 00 00 	br	#0x0000		;

Disassembly of section .lower.text.setEvent:

00000000 <setEvent>:
   0:	0c 93       	cmp	#0,	r12	;r3 As==00
   2:	00 24       	jz	$+2      	;abs 0x4

00000004 <.Loc.336.1>:
   4:	b0 12 00 00 	call	#0		;

00000008 <.L100>:
   8:	30 41       	ret			

Disassembly of section .lower.text.clearEvent:

00000000 <clearEvent>:
   0:	0c 93       	cmp	#0,	r12	;r3 As==00
   2:	00 24       	jz	$+2      	;abs 0x4

00000004 <.Loc.344.1>:
   4:	cc 43 00 00 	mov.b	#0,	0(r12)	;r3 As==00

00000008 <.L105>:
   8:	30 41       	ret			

Disassembly of section .lower.text.checkEvent:

00000000 <checkEvent>:
   0:	0c 93       	cmp	#0,	r12	;r3 As==00
   2:	00 24       	jz	$+2      	;abs 0x4

00000004 <.Loc.352.1>:
   4:	6c 4c       	mov.b	@r12,	r12	;

00000006 <.LVL99>:
   6:	5c e3       	xor.b	#1,	r12	;r3 As==01
   8:	3c f0 ff 00 	and	#255,	r12	;#0x00ff
   c:	3c 53       	add	#-1,	r12	;r3 As==11
   e:	5c 03       	rrum	#1,	r12	;
  10:	4d 18 0c 11 	rpt #14 { rrax.w	r12		;

00000014 <.L111>:
  14:	30 41       	ret			

Disassembly of section .lower.text.sleep:

00000000 <sleep>:
   0:	0e 4d       	mov	r13,	r14	;
   2:	0d 4c       	mov	r12,	r13	;
   4:	4c 43       	clr.b	r12		;

00000006 <.LVL101>:
   6:	b0 12 00 00 	call	#0		;

0000000a <.LVL102>:
   a:	30 41       	ret			

Disassembly of section .lower.text.sleepUntil:

00000000 <sleepUntil>:
   0:	0c 93       	cmp	#0,	r12	;r3 As==00
   2:	00 24       	jz	$+2      	;abs 0x4

00000004 <.Loc.367.1>:
   4:	0d 4c       	mov	r12,	r13	;
   6:	4c 43       	clr.b	r12		;

00000008 <.LVL104>:
   8:	b0 12 00 00 	call	#0		;

0000000c <.L114>:
   c:	30 41       	ret			

Disassembly of section .lower.text.getResource:

00000000 <getResource>:
   0:	b0 12 00 00 	call	#0		;

00000004 <.LVL107>:
   4:	30 41       	ret			

Disassembly of section .lower.text.releaseResource:

00000000 <releaseResource>:
   0:	b0 12 00 00 	call	#0		;

00000004 <.LVL109>:
   4:	30 41       	ret			

Disassembly of section .lower.text.__syscall_getResource:

00000000 <__syscall_getResource>:
   0:	6a 15       	pushm	#7,	r10	;16-bit words

00000002 <.LCFI11>:
   2:	0a 4c       	mov	r12,	r10	;
   4:	39 40 00 00 	mov	#0,	r9	;
   8:	37 40 00 00 	mov	#0,	r7	;

0000000c <.Loc.384.1>:
   c:	cc 93 00 00 	cmp.b	#0,	0(r12)	;r3 As==00
  10:	00 20       	jnz	$+2      	;abs 0x12

00000012 <.Loc.383.1>:
  12:	1c 42 00 00 	mov	&0x0000,r12	;0x0000

00000016 <.LVL112>:
  16:	58 4c 1a 00 	mov.b	26(r12),r8	;0x0001a

0000001a <.Loc.386.1>:
  1a:	15 4a 02 00 	mov	2(r10),	r5	;
  1e:	7d 40 36 00 	mov.b	#54,	r13	;#0x0036
  22:	0c 48       	mov	r8,	r12	;
  24:	87 12       	call	r7		;

00000026 <.LVL113>:
  26:	0c 59       	add	r9,	r12	;
  28:	06 4c       	mov	r12,	r6	;
  2a:	36 50 1c 00 	add	#28,	r6	;#0x001c
  2e:	86 95 00 00 	cmp	r5,	0(r6)	;
  32:	00 2c       	jc	$+2      	;abs 0x34

00000034 <.LBB8>:
  34:	14 4c 28 00 	mov	40(r12),r4	;0x00028

00000038 <.LVL114>:
  38:	15 53       	inc	r5		;
  3a:	86 45 00 00 	mov	r5,	0(r6)	;

0000003e <.Loc.391.1>:
  3e:	4c 48       	mov.b	r8,	r12	;
  40:	b0 12 00 00 	call	#0		;

00000044 <.LVL115>:
  44:	0d 44       	mov	r4,	r13	;
  46:	4c 48       	mov.b	r8,	r12	;
  48:	b0 12 00 00 	call	#0		;

0000004c <.LVL116>:
  4c:	7d 40 36 00 	mov.b	#54,	r13	;#0x0036
  50:	0c 48       	mov	r8,	r12	;
  52:	87 12       	call	r7		;

00000054 <.LVL117>:
  54:	0c 59       	add	r9,	r12	;
  56:	1c 4c 1c 00 	mov	28(r12),r12	;0x0001c
  5a:	3c 53       	add	#-1,	r12	;r3 As==11
  5c:	86 4c 00 00 	mov	r12,	0(r6)	;

00000060 <.L123>:
  60:	ca 48 01 00 	mov.b	r8,	1(r10)	;

00000064 <.L122>:
  64:	56 4a 01 00 	mov.b	1(r10),	r6	;
  68:	7d 40 36 00 	mov.b	#54,	r13	;#0x0036
  6c:	0c 46       	mov	r6,	r12	;
  6e:	87 12       	call	r7		;
  70:	0c 59       	add	r9,	r12	;
  72:	08 4c       	mov	r12,	r8	;
  74:	38 50 20 00 	add	#32,	r8	;#0x0020
  78:	7d 40 36 00 	mov.b	#54,	r13	;#0x0036
  7c:	0c 46       	mov	r6,	r12	;
  7e:	87 12       	call	r7		;
  80:	0c 59       	add	r9,	r12	;
  82:	5c 4c 20 00 	mov.b	32(r12),r12	;0x00020
  86:	5c 53       	inc.b	r12		;
  88:	c8 4c 00 00 	mov.b	r12,	0(r8)	;

0000008c <.Loc.398.1>:
  8c:	da 53 00 00 	inc.b	0(r10)		;

00000090 <.Loc.399.1>:
  90:	64 17       	popm	#7,	r10	;16-bit words
  92:	30 41       	ret			

Disassembly of section .lower.text.__syscall_releaseResource:

00000000 <__syscall_releaseResource>:
   0:	5a 15       	pushm	#6,	r10	;16-bit words

00000002 <.LCFI12>:
   2:	07 4c       	mov	r12,	r7	;

00000004 <.LVL122>:
   4:	1c 42 00 00 	mov	&0x0000,r12	;0x0000

00000008 <.LVL123>:
   8:	5a 4c 1a 00 	mov.b	26(r12),r10	;0x0001a

0000000c <.LVL124>:
   c:	39 40 00 00 	mov	#0,	r9	;
  10:	38 40 00 00 	mov	#0,	r8	;

00000014 <.Loc.405.1>:
  14:	c7 9a 01 00 	cmp.b	r10,	1(r7)	;
  18:	00 20       	jnz	$+2      	;abs 0x1a

0000001a <.Loc.407.1>:
  1a:	7d 40 36 00 	mov.b	#54,	r13	;#0x0036
  1e:	0c 4a       	mov	r10,	r12	;

00000020 <.LVL125>:
  20:	88 12       	call	r8		;

00000022 <.LVL126>:
  22:	0c 59       	add	r9,	r12	;
  24:	06 4c       	mov	r12,	r6	;
  26:	36 50 20 00 	add	#32,	r6	;#0x0020
  2a:	7d 40 36 00 	mov.b	#54,	r13	;#0x0036
  2e:	0c 4a       	mov	r10,	r12	;
  30:	88 12       	call	r8		;

00000032 <.LVL127>:
  32:	0c 59       	add	r9,	r12	;
  34:	5c 4c 20 00 	mov.b	32(r12),r12	;0x00020
  38:	7c 53       	add.b	#-1,	r12	;r3 As==11
  3a:	c6 4c 00 00 	mov.b	r12,	0(r6)	;

0000003e <.Loc.408.1>:
  3e:	6c 47       	mov.b	@r7,	r12	;
  40:	7c 53       	add.b	#-1,	r12	;r3 As==11
  42:	c7 4c 00 00 	mov.b	r12,	0(r7)	;

00000046 <.Loc.409.1>:
  46:	4c 93       	cmp.b	#0,	r12	;r3 As==00
  48:	00 20       	jnz	$+2      	;abs 0x4a

0000004a <.Loc.411.1>:
  4a:	f7 43 01 00 	mov.b	#-1,	1(r7)	;r3 As==11

0000004e <.L126>:
  4e:	7d 40 36 00 	mov.b	#54,	r13	;#0x0036
  52:	0c 4a       	mov	r10,	r12	;
  54:	88 12       	call	r8		;
  56:	0c 59       	add	r9,	r12	;
  58:	cc 93 20 00 	cmp.b	#0,	32(r12)	;r3 As==00, 0x0020
  5c:	00 24       	jz	$+2      	;abs 0x5e
  5e:	3d 40 00 00 	mov	#0,	r13	;

00000062 <.LBB9>:
  62:	4c 43       	clr.b	r12		;
  64:	07 4c       	mov	r12,	r7	;

00000066 <.L129>:
  66:	1c 92 00 00 	cmp	&0x0000,r12	;0x0000
  6a:	00 20       	jnz	$+2      	;abs 0x6c

0000006c <.LBE9>:
  6c:	7d 40 36 00 	mov.b	#54,	r13	;#0x0036
  70:	0c 4a       	mov	r10,	r12	;

00000072 <.LVL130>:
  72:	88 12       	call	r8		;
  74:	06 49       	mov	r9,	r6	;
  76:	06 5c       	add	r12,	r6	;
  78:	86 97 1e 00 	cmp	r7,	30(r6)	; 0x001e
  7c:	00 2c       	jc	$+2      	;abs 0x7e

0000007e <.Loc.427.1>:
  7e:	05 46       	mov	r6,	r5	;
  80:	35 50 1c 00 	add	#28,	r5	;#0x001c
  84:	17 53       	inc	r7		;

00000086 <.LVL132>:
  86:	85 47 00 00 	mov	r7,	0(r5)	;

0000008a <.Loc.428.1>:
  8a:	4c 4a       	mov.b	r10,	r12	;
  8c:	b0 12 00 00 	call	#0		;

00000090 <.LVL133>:
  90:	1d 46 28 00 	mov	40(r6),	r13	;0x00028
  94:	4c 4a       	mov.b	r10,	r12	;
  96:	b0 12 00 00 	call	#0		;

0000009a <.LVL134>:
  9a:	7d 40 36 00 	mov.b	#54,	r13	;#0x0036
  9e:	0c 4a       	mov	r10,	r12	;
  a0:	88 12       	call	r8		;
  a2:	0c 59       	add	r9,	r12	;
  a4:	1c 4c 1c 00 	mov	28(r12),r12	;0x0001c
  a8:	3c 53       	add	#-1,	r12	;r3 As==11
  aa:	85 4c 00 00 	mov	r12,	0(r5)	;

000000ae <.L124>:
  ae:	55 17       	popm	#6,	r10	;16-bit words
  b0:	30 41       	ret			

000000b2 <.L131>:
  b2:	cd 9a 00 00 	cmp.b	r10,	0(r13)	;
  b6:	00 20       	jnz	$+2      	;abs 0xb8

000000b8 <.Loc.420.1>:
  b8:	1e 4d 01 00 	mov	1(r13),	r14	;
  bc:	07 9e       	cmp	r14,	r7	;
  be:	00 2c       	jc	$+2      	;abs 0xc0

000000c0 <.Loc.421.1>:
  c0:	47 4e       	mov.b	r14,	r7	;

000000c2 <.L130>:
  c2:	1c 53       	inc	r12		;
  c4:	3d 50 06 00 	add	#6,	r13	;
  c8:	30 40 00 00 	br	#0x0000		;
