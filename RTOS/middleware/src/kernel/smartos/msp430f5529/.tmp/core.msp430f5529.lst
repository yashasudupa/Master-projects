
.tmp/core.msp430f5529.o:     file format elf32-msp430

SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
000000bc l       .text	00000000 systemcall
000000a8 l       .text	00000000 Interruptcall
000000d6 l       .text	00000000 Timeout
000000e2 l       .text	00000000 Timer
00000110 l       .text	00000000 label_syscall_mystery
0000012a l       .text	00000000 label_syscall_CAS
00000144 l       .text	00000000 label_syscall_waitEventUntil
0000015e l       .text	00000000 label_syscall_setEvent
00000178 l       .text	00000000 label_syscall_getResource
00000192 l       .text	00000000 label_syscall_releaseResource
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .MSP430.attributes	00000000 .MSP430.attributes
00000000 g     F .text	00000000 os_dispatcher
00000000         *UND*	00000000 updateHead
00000000         *UND*	00000000 os_runningTask
00000000         *UND*	00000000 os_kernel_mode
00000040 g     F .text	00000000 __kernel_entry
00000000         *UND*	00000000 os_SP
00000000         *UND*	00000000 __os_stack_begin
0000009a g     F .text	00000000 __kernel_body
00000000         *UND*	00000000 panic
00000000         *UND*	00000000 os_irq_sysc
00000000         *UND*	00000000 __os_irq_table
00000000         *UND*	00000000 os_timeoutQueueDirty
00000000         *UND*	00000000 update_timer
000000e8 g     F .text	00000000 __hwirq_1
000000ee g     F .text	00000000 __hwirq_2
000000f4 g     F .text	00000000 __hwirq_52
000000fc g     F .text	00000000 syscall_mystery
00000000         *UND*	00000000 __syscall_mystery
00000116 g     F .text	00000000 syscall_CAS
00000000         *UND*	00000000 __syscall_CAS
00000130 g     F .text	00000000 syscall_waitEventUntil
00000000         *UND*	00000000 __syscall_waitEventUntil
0000014a g     F .text	00000000 syscall_setEvent
00000000         *UND*	00000000 __syscall_setEvent
00000164 g     F .text	00000000 syscall_getResource
00000000         *UND*	00000000 __syscall_getResource
0000017e g     F .text	00000000 syscall_releaseResource
00000000         *UND*	00000000 __syscall_releaseResource



Disassembly of section .text:

00000000 <os_dispatcher>:

.global os_dispatcher
  .type os_dispatcher, @function
os_dispatcher:
    ; FIXME:
    call #updateHead
   0:	b0 12 00 00 	call	#0		;

00000004 <.Loc.22.1>:

        MOV.W os_runningTask, R15
   4:	1f 40 00 00 	mov	0x0000,	r15	;PC rel. 0x0006

00000008 <.Loc.23.1>:
   8:	21 4f       	mov	@r15,	r1	;

0000000a <.Loc.24.1>:
   a:	14 4f 02 00 	mov	2(r15),	r4	;

0000000e <.Loc.25.1>:
        MOV.W @R15, R1
   e:	15 4f 04 00 	mov	4(r15),	r5	;

00000012 <.Loc.26.1>:
  12:	16 4f 06 00 	mov	6(r15),	r6	;

00000016 <.Loc.27.1>:
        MOV.W 2(R15), R4
  16:	17 4f 08 00 	mov	8(r15),	r7	;

0000001a <.Loc.28.1>:
  1a:	18 4f 0a 00 	mov	10(r15),r8	;0x0000a

0000001e <.Loc.29.1>:
  1e:	19 4f 0c 00 	mov	12(r15),r9	;0x0000c

00000022 <.Loc.30.1>:
  22:	1a 4f 0e 00 	mov	14(r15),r10	;0x0000e

00000026 <.Loc.31.1>:
        MOV.W 4(R15), R5
  26:	1b 4f 10 00 	mov	16(r15),r11	;0x00010

0000002a <.Loc.32.1>:
  2a:	1c 4f 12 00 	mov	18(r15),r12	;0x00012

0000002e <.Loc.33.1>:
  2e:	1d 4f 14 00 	mov	20(r15),r13	;0x00014

00000032 <.Loc.34.1>:
  32:	1e 4f 16 00 	mov	22(r15),r14	;0x00016

00000036 <.Loc.35.1>:
        MOV.W 6(R15), R6
  36:	1f 4f 18 00 	mov	24(r15),r15	;0x00018

0000003a <.Loc.36.1>:
  3a:	80 43 00 00 	mov	#0,	0x0000	;r3 As==00, PC rel. 0x003c

0000003e <.Loc.37.1>:
  3e:	00 13       	reti			

00000040 <__kernel_entry>:
  40:	90 43 00 00 	mov	#1,	0x0000	;r3 As==01, PC rel. 0x0042

00000044 <.Loc.43.1>:
  44:	80 41 00 00 	mov	r1,	0x0000	; PC rel. 0x0046

00000048 <.Loc.44.1>:
  48:	11 40 00 00 	mov	0x0000,	r1	;PC rel. 0x004a

0000004c <.Loc.45.1>:
        MOV.W 8(R15), R7
  4c:	91 40 00 00 	mov	0x0000,	0(r1)	;PC rel. 0x004e
  50:	00 00 

00000052 <.Loc.46.1>:
  52:	81 44 02 00 	mov	r4,	2(r1)	;

00000056 <.Loc.47.1>:
  56:	81 45 04 00 	mov	r5,	4(r1)	;

0000005a <.Loc.48.1>:
  5a:	81 46 06 00 	mov	r6,	6(r1)	;

0000005e <.Loc.49.1>:
  5e:	81 47 08 00 	mov	r7,	8(r1)	;

00000062 <.Loc.50.1>:
  62:	81 48 0a 00 	mov	r8,	10(r1)	; 0x000a

00000066 <.Loc.51.1>:
        MOV.W 10(R15), R8
  66:	81 49 0c 00 	mov	r9,	12(r1)	; 0x000c

0000006a <.Loc.52.1>:
  6a:	81 4a 0e 00 	mov	r10,	14(r1)	; 0x000e

0000006e <.Loc.53.1>:
  6e:	81 4b 10 00 	mov	r11,	16(r1)	; 0x0010

00000072 <.Loc.54.1>:
  72:	81 4c 12 00 	mov	r12,	18(r1)	; 0x0012

00000076 <.Loc.55.1>:
  76:	81 4d 14 00 	mov	r13,	20(r1)	; 0x0014

0000007a <.Loc.56.1>:
  7a:	81 4e 16 00 	mov	r14,	22(r1)	; 0x0016

0000007e <.Loc.57.1>:
  7e:	81 4f 18 00 	mov	r15,	24(r1)	; 0x0018

00000082 <.Loc.61.1>:
  82:	31 40 00 00 	mov	#0,	r1	;

00000086 <.Loc.62.1>:
        MOV.W 12(R15), R9
  86:	14 40 00 00 	mov	0x0000,	r4	;PC rel. 0x0088

0000008a <.Loc.63.1>:
  8a:	14 44 24 00 	mov	36(r4),	r4	;0x00024

0000008e <.Loc.64.1>:
  8e:	b4 90 5a a5 	cmp	#42330,	0(r4)	;#0xa55a
  92:	00 00 

00000094 <.Loc.65.1>:
  94:	00 24       	jz	$+2      	;abs 0x96

00000096 <.Loc.66.1>:
  96:	b0 12 00 00 	call	#0		;

0000009a <__kernel_body>:
  9a:	14 42 00 00 	mov	&0x0000,r4	;0x0000

0000009e <.Loc.73.1>:
  9e:	35 40 ff 00 	mov	#255,	r5	;#0x00ff

000000a2 <.Loc.74.1>:
  a2:	05 94       	cmp	r4,	r5	;

000000a4 <.Loc.75.1>:
  a4:	00 28       	jnc	$+2      	;abs 0xa6

000000a6 <.Loc.76.1>:
        MOV.W 14(R15), R10
  a6:	00 3c       	jmp	$+2      	;abs 0xa8

000000a8 <Interruptcall>:
  a8:	34 40 00 00 	mov	#0,	r4	;

000000ac <.Loc.80.1>:
  ac:	14 50 00 00 	add	0x0000,	r4	;PC rel. 0x00ae

000000b0 <.Loc.81.1>:
  b0:	14 50 00 00 	add	0x0000,	r4	;PC rel. 0x00b2

000000b4 <.Loc.82.1>:
  b4:	84 93 00 00 	cmp	#0,	0(r4)	;r3 As==00

000000b8 <.Loc.83.1>:
  b8:	a4 12       	call	@r4		;

000000ba <.Loc.84.1>:
  ba:	00 3c       	jmp	$+2      	;abs 0xbc

000000bc <systemcall>:
  bc:	14 42 00 00 	mov	&0x0000,r4	;0x0000

000000c0 <.Loc.88.1>:
  c0:	84 12       	call	r4		;

000000c2 <.Loc.92.1>:
  c2:	80 41 00 00 	mov	r1,	0x0000	; PC rel. 0x00c4

000000c6 <.Loc.93.1>:
  c6:	11 40 00 00 	mov	0x0000,	r1	;PC rel. 0x00c8

000000ca <.Loc.94.1>:
  ca:	31 50 1a 00 	add	#26,	r1	;#0x001a

000000ce <.Loc.95.1>:
        MOV.W 16(R15), R11
  ce:	3f 15       	pushm	#4,	r15	;16-bit words

000000d0 <.Loc.96.1>:
  d0:	11 40 00 00 	mov	0x0000,	r1	;PC rel. 0x00d2

000000d4 <.Loc.98.1>:
  d4:	00 3c       	jmp	$+2      	;abs 0xd6

000000d6 <Timeout>:
  d6:	14 40 00 00 	mov	0x0000,	r4	;PC rel. 0x00d8

000000da <.Loc.102.1>:
  da:	94 93 00 00 	cmp	#1,	0(r4)	;r3 As==01

000000de <.Loc.103.1>:
  de:	00 24       	jz	$+2      	;abs 0xe0

000000e0 <.Loc.104.1>:
  e0:	00 3c       	jmp	$+2      	;abs 0xe2

000000e2 <Timer>:
  e2:	b0 12 00 00 	call	#0		;

000000e6 <.Loc.110.1>:
  e6:	00 3c       	jmp	$+2      	;abs 0xe8

000000e8 <__hwirq_1>:
  e8:	90 43 00 00 	mov	#1,	0x0000	;r3 As==01, PC rel. 0x00ea
  ec:	00 3c       	jmp	$+2      	;abs 0xee

000000ee <__hwirq_2>:
  ee:	a0 43 00 00 	mov	#2,	0x0000	;r3 As==10, PC rel. 0x00f0
  f2:	00 3c       	jmp	$+2      	;abs 0xf4

000000f4 <__hwirq_52>:
  f4:	b0 40 34 00 	mov	#52,	0x0000	;#0x0034, PC rel. 0x00f8
  f8:	00 00 
        MOV.W 18(R15), R12
  fa:	00 3c       	jmp	$+2      	;abs 0xfc

000000fc <syscall_mystery>:
  fc:	13 90       	.word	0x9013;	????
  fe:	00 00       	beq			
 100:	00 20       	jnz	$+2      	;abs 0x102
 102:	02 12       	push	r2		;
 104:	32 c2       	dint			
 106:	03 43       	nop			
 108:	b0 40 00 00 	mov	#0,	0x0000	; PC rel. 0x010c
 10c:	00 00 
 10e:	00 3c       	jmp	$+2      	;abs 0x110

00000110 <label_syscall_mystery>:
 110:	b0 12 00 00 	call	#0		;
 114:	30 41       	ret			

00000116 <syscall_CAS>:
 116:	13 90       	.word	0x9013;	????
 118:	00 00       	beq			
 11a:	00 20       	jnz	$+2      	;abs 0x11c
 11c:	02 12       	push	r2		;
 11e:	32 c2       	dint			
 120:	03 43       	nop			
 122:	b0 40 00 00 	mov	#0,	0x0000	; PC rel. 0x0126
 126:	00 00 
        MOV.W 20(R15), R13
 128:	00 3c       	jmp	$+2      	;abs 0x12a

0000012a <label_syscall_CAS>:
 12a:	b0 12 00 00 	call	#0		;
 12e:	30 41       	ret			

00000130 <syscall_waitEventUntil>:
 130:	13 90       	.word	0x9013;	????
 132:	00 00       	beq			
 134:	00 20       	jnz	$+2      	;abs 0x136
 136:	02 12       	push	r2		;
 138:	32 c2       	dint			
 13a:	03 43       	nop			
 13c:	b0 40 00 00 	mov	#0,	0x0000	; PC rel. 0x0140
 140:	00 00 
 142:	00 3c       	jmp	$+2      	;abs 0x144

00000144 <label_syscall_waitEventUntil>:
 144:	b0 12 00 00 	call	#0		;
 148:	30 41       	ret			

0000014a <syscall_setEvent>:
 14a:	13 90       	.word	0x9013;	????
 14c:	00 00       	beq			
 14e:	00 20       	jnz	$+2      	;abs 0x150
 150:	02 12       	push	r2		;
 152:	32 c2       	dint			
 154:	03 43       	nop			
        MOV.W 22(R15), R14
 156:	b0 40 00 00 	mov	#0,	0x0000	; PC rel. 0x015a
 15a:	00 00 
 15c:	00 3c       	jmp	$+2      	;abs 0x15e

0000015e <label_syscall_setEvent>:
 15e:	b0 12 00 00 	call	#0		;
 162:	30 41       	ret			

00000164 <syscall_getResource>:
 164:	13 90       	.word	0x9013;	????
 166:	00 00       	beq			
 168:	00 20       	jnz	$+2      	;abs 0x16a
 16a:	02 12       	push	r2		;
 16c:	32 c2       	dint			
 16e:	03 43       	nop			
 170:	b0 40 00 00 	mov	#0,	0x0000	; PC rel. 0x0174
 174:	00 00 
 176:	00 3c       	jmp	$+2      	;abs 0x178

00000178 <label_syscall_getResource>:
 178:	b0 12 00 00 	call	#0		;
 17c:	30 41       	ret			

0000017e <syscall_releaseResource>:
 17e:	13 90       	.word	0x9013;	????
 180:	00 00       	beq			
 182:	00 20       	jnz	$+2      	;abs 0x184
 184:	02 12       	push	r2		;
 186:	32 c2       	dint			
 188:	03 43       	nop			
 18a:	b0 40 00 00 	mov	#0,	0x0000	; PC rel. 0x018e
 18e:	00 00 
        MOV.W 24(R15), R15
 190:	00 3c       	jmp	$+2      	;abs 0x192

00000192 <label_syscall_releaseResource>:
 192:	b0 12 00 00 	call	#0		;
 196:	30 41       	ret			
