	///////////////////////////////////////////
// Usefull macro for instructions using carry
///////////////////////////////////////////
macro CarryFromAdd(op1,op2,res) = \
	if ((op1)<16..16> == 1) && ((op2)<16..16> ==  1) then \
		1 \
	else \
		if ((op2)<16..16> == 1) && ((res)<16..16> ==  0) then \
			1 \
		else \
			if ((res)<16..16> ==  0) && ((op1)<16..16> == 1) then \
				1 \
			else \
				0 \
			endif \
		endif \
	endif

macro OverflowFromAdd(op1,op2,res) = \
	if ((op1)<16..16> == 1) && ((op2)<16..16> == 1) && ((res)<16..16> == 0) then \
		1 \
	else \
		if ((op1)<16..16> == 0) && ((op2)<16..16> == 0) && ((res)<16..16> == 1) then \
			1 \
		else \
			0 \
		endif \
	endif

macro CarryFromSub(op1,op2,res) = \
	CarryFromAdd((op1), ~(op2), res) \
	
macro OverflowFromSub(op1,op2,res) = \
	if ((op1)<16..16> == 1) && ((op2)<16..16> ==  0) && ((res)<16..16> == 0) then \
		1 \
	else \
		if ((op1)<16..16> == 0) && ((op2)<16..16> == 1) && ((res)<16..16>  == 1) then \
			1 \
		else \
			0 \
		endif \
	endif; 

macro ADD(dest,src) = \
		 TMP_REG1 = Get_MSP_GPR(dest);\
		 TMP_REG2 = Get_MSP_GPR(src);\
		 TMP_REG1 = TMP_REG2 + TMP_REG1; \
		 Set_MSP_GPR(dest,TMP_REG1);\
		if SBIT == 1 then \
			NFLAG = TMP_REG1<15..15>; \
		else \
			NFLAG = 0;\
		endif; \
		if (TMP_REG1 == 0) then \
		 	ZFLAG = 1; \
		else \
		        ZFLAG = 0; \
			endif; \
		CFLAG = CarryFromAdd(TMP_REG2,TMP_REG1,TMP_REG1);\
		VFLAG = OverflowFromAdd(TMP_REG2,TMP_REG1,TMP_REG1); 

macro ADC(dest) = \
       		 TMP_REG1 = Get_MSP_GPR(dest);\
		 TMP_REG2 = carry;\
		 TMP_REG1 = TMP_REG2 + TMP_REG1; \
		 Set_MSP_GPR(dest,TMP_REG1);\
		if SBIT == 1 then \
			NFLAG = TMP_REG1<15..15>; \
		else \
			NFLAG = 0;\
		endif;\
		if TMP_REG1 == 0 then \
		 	ZFLAG = 1; \
		else \
		        ZFLAG = 0; \
			endif; \
		CFLAG = CarryFromAdd(TMP_REG2,TMP_REG1,TMP_REG1);\
		VFLAG = OverflowFromAdd(TMP_REG2,TMP_REG1,TMP_REG1); 

macro ADDC(dest,src) = \
		 TMP_REG1 = Get_MSP_GPR(dest);\
		 TMP_REG2 = Get_MSP_GPR(src);\
		 TMP_REG3 = TMP_REG2 + carry;\
		 TMP_REG1 = TMP_REG2 + TMP_REG1 + carry; \
		 Set_MSP_GPR(dest,TMP_REG1);\
		if SBIT(TMP_REG1) == 1 then \
			NFLAG = TMP_REG1<15..15>; \
		else \
			NFLAG = 0;\
		endif;\
		if TMP_REG1 == 0 then \
		 	ZFLAG = 1; \
		else \
		        ZFLAG = 0; \
			endif; \
		CFLAG = CarryFromAdd(TMP_REG3,TMP_REG1,TMP_REG1);\
		VFLAG = OverflowFromAdd(TMP_REG3,TMP_REG1,TMP_REG1); 

macro AND(dest,src) = \
		 TMP_REG1 = Get_MSP_GPR(dest);\
		 TMP_REG2 = Get_MSP_GPR(src);\
		 TMP_REG1 = TMP_REG2 & TMP_REG1; \
		 Set_MSP_GPR(dest,TMP_REG1);\
		if SBIT(TMP_REG1) == 1 then \
			NFLAG = TMP_REG1<15..15>; \
		else \
			NFLAG = 0;\
		endif;\
		if TMP_REG1 == 0 then \
		 	ZFLAG = 1; \
		else \
		        ZFLAG = 0; \
			endif; \
		if TMP_REG1 != 0 then \
			 	CFLAG = 1; \
		else \
		        CFLAG = 0; \
			endif; \
		VFLAG = 0; 

macro  BIC(dest,src) = \
		TMP_REG1 = Get_MSP_GPR(dest);\
		TMP_REG2 = Get_MSP_GPR(src);\
		TMP_REG1 = (!(TMP_REG2)) & TMP_REG1; \
		Set_MSP_GPR(dest,TMP_REG1); 

macro  BIS(dest,src) = \
		TMP_REG1 = Get_MSP_GPR(dest);\
		TMP_REG2 = Get_MSP_GPR(src);\
		TMP_REG1 = TMP_REG2 | TMP_REG1; \
		Set_MSP_GPR(dest,TMP_REG1);

macro BIT(dest,src) = \
		 TMP_REG1 = Get_MSP_GPR(dest);\
		 TMP_REG2 = Get_MSP_GPR(src);\
		 TMP_REG1 = TMP_REG2 & TMP_REG1; \
		if SBIT(TMP_REG1) == 1 then \
			NFLAG = TMP_REG1<15..15>; \
		else \
			NFLAG = 0;\
		endif;\
		if TMP_REG1 == 0 then \
		 	ZFLAG = 1; \
		else \
		        ZFLAG = 0; \
			endif; \
		if TMP_REG1 != 0 then \
			 	CFLAG = 1; \
		else \
		        CFLAG = 0; \
			endif; \
		VFLAG = 0;

macro BR(dest) = \
		 TMP_REG1 = Get_MSP_GPR(dest);\
		 TMP_REG1 = 0; 
		 

macro CLR(dest) = \
		Set_MSP_GPR(dest,0);

macro CALL(dest) = \
		 TMP_REG1 = Get_MSP_GPR(dest);\
		 SP = SP - 2 ;\
		 PC = M[SP] ;\
		 PC = TMP_REG1 ;\
		 PC<19..16> = 0;

macro CLRC = \
		CFLAG = 0;

macro CLRN = \
		NFLAG = 0;

macro CLRZ = \
		ZFLAG = 0;

macro CMP(dest,src) = \
		TMP_REG1 = Get_MSP_GPR(dest);\
		TMP_REG2 = Get_MSP_GPR(src);\
		TMP_REG3 = TMP_REG1 - TMP_REG2;\
		NFLAG = TMP_REG3<15..15>; \
		if TMP_REG3 == 0 then \
			ZFLAG = 1; \
		else \
			ZFLAG = 0; \
		endif; \
		CFLAG = CarryFromSub(TMP_REG1,TMP_REG2,TMP_REG3); \
		VFLAG = OverflowFromSub(TMP_REG1,TMP_REG2,TMP_REG3);

macro DADC(dest) = \
		 TMP_REG1 = Get_MSP_GPR(dest);\
		 TMP_REG2 = TMP_REG1 + carry;\ 
		 Set_MSP_GPR(dest,TMP_REG2);\
		 if SBIT(TMP_REG1) == 1 then \
			NFLAG = TMP_REG2<15..15>; \
		else \
			NFLAG = 0;\
		endif;\
		if TMP_REG2 == 0 then \
		 	ZFLAG = 1; \
		else \
		        ZFLAG = 0; \
			endif; \
		CFLAG = CarryFromAdd(carry,TMP_REG1,TMP_REG2);\
		VFLAG = OverflowFromAdd(carry,TMP_REG1,TMP_REG2);

macro DADD(dest,src) = \
		 TMP_REG1 = Get_MSP_GPR(dest);\
		 TMP_REG2 = Get_MSP_GPR(src);\
		 TMP_REG3 = TMP_REG2 + carry;\
		 TMP_REG1 = TMP_REG2 + TMP_REG1 + carry; \
		 Set_MSP_GPR(dest,TMP_REG1);\
		if SBIT(TMP_REG1) == 1 then \
			NFLAG = TMP_REG1<15..15>; \
		else \
			NFLAG = 0;\
		endif;\
		if TMP_REG1 == 0 then \
		 	ZFLAG = 1; \
		else \
		        ZFLAG = 0; \
			endif; \
		CFLAG = CarryFromAdd(TMP_REG3,TMP_REG1,TMP_REG1);\
		VFLAG = OverflowFromAdd(TMP_REG3,TMP_REG1,TMP_REG1); 

macro DEC(dest) = \
		TMP_REG1 = Get_MSP_GPR(dest);\
		TMP_REG2 = TMP_REG1 - 1;\
		Set_MSP_GPR(dest,TMP_REG2);\
		if SBIT(TMP_REG2) == 1 then \
			NFLAG = TMP_REG2<15..15>; \
		else \
			NFLAG = 0;\
		endif;\
		if TMP_REG2 == 0 then \
		 	ZFLAG = 1; \
		else \
		        ZFLAG = 0; \
		endif; \
		if TMP_REG1 == 0 then \
			CFLAG = 0; \
		else \
			CFLAG = 1; \
		VFLAG = OverflowFromSub(TMP_REG1,carry,TMP_REG2);\
		if TMP_REG1 == 0x8000 then \
			VFLAG = 1; \
		else \
			VFLAG = 0; 

macro DECD(dest) = \
		TMP_REG1 = Get_MSP_GPR(dest);\
		TMP_REG2 = TMP_REG1 - 2;\
		Set_MSP_GPR(dest,TMP_REG2);\
		if SBIT(TMP_REG2) == 1 then \
			NFLAG = TMP_REG2<15..15>; \
		else \
			NFLAG = 0;\
		endif;\
		if TMP_REG2 == 0 then \
		 	ZFLAG = 1; \
		else \
		        ZFLAG = 0; \
		endif; \
		if (TMP_REG1 == 0 || TMP_REG1 == 1) then \
			CFLAG = 0; \
		else \
			CFLAG = 1; \
		VFLAG = OverflowFromSub(TMP_REG1,carry,TMP_REG2);\
		if (TMP_REG1 == 0x8000 || TMP_REG1 == 0x8001) then \
			VFLAG = 1; \
		else \
			VFLAG = 0; 

macro DINT = \
		GIE = 0;

macro EINT = \
		GIE = 1;

macro INC(dest) = \
		TMP_REG1 = Get_MSP_GPR(dest);\
		TMP_REG2 = TMP_REG1 + 1;\
		Set_MSP_GPR(dest,TMP_REG2);\
		if SBIT(TMP_REG2) == 1 then \
			NFLAG = TMP_REG2<15..15>; \
		else \
			NFLAG = 0;\
		endif;\
		if TMP_REG1 == 0xFFFF then \
		 	ZFLAG = 1; \
		else \
		        ZFLAG = 0; \
		endif; \
		if TMP_REG1 == 0xFFFF then \
			CFLAG = 1; \
		else \
			CFLAG = 0; \
		if TMP_REG1 == 0x7FFF then \
			VFLAG = 1; \
		else \
			VFLAG = 0; 

macro INCD(dest) = \
		TMP_REG1 = Get_MSP_GPR(dest);\
		TMP_REG2 = TMP_REG1 + 2;\
		Set_MSP_GPR(dest,TMP_REG2);\
		if SBIT(TMP_REG2) == 1 then \
			NFLAG = TMP_REG2<15..15>; \
		else \
			NFLAG = 0;\
		endif;\
		if TMP_REG1 == 0xFFFE then \
		 	ZFLAG = 1; \
		else \
		        ZFLAG = 0; \
		endif; \
		if TMP_REG1 == 0xFFFE then \
			CFLAG = 1; \
		else \
			CFLAG = 0; \
		if TMP_REG1 == 0x7FFE then \
			VFLAG = 1; \
		else \
			VFLAG = 0; 

macro INV(dest) = \
		TMP_REG1 = Get_MSP_GPR(dest);\
		TMP_REG2 = (!TMP_REG1);\
		Set_MSP_GPR(dest,TMP_REG2);\
		if SBIT(TMP_REG2) == 1 then \
			NFLAG = TMP_REG2<15..15>; \
		else \
			NFLAG = 0;\
		endif;\
		if TMP_REG1 == 0xFFFF then \
		 	ZFLAG = 1; \
		else \
		        ZFLAG = 0; \
		endif; \
		if TMP_REG2 != 0 then \
			CFLAG = 1; \
		else \
			CFLAG = 0; \
		if TMP_REG1<15..15> == 1 then \
			VFLAG = 1; \
		else \
			VFLAG = 0; 

macro JC(label) = \
		if CFLAG == 1 then \
			PC = PC + (2*(label)); \
		else \
			PC = PC + 2; 

macro JEQ(label) = \
		if ZFLAG == 1 then \
			PC = PC + (2*(label)); \
		else \
			PC = PC + 2; 

macro JGE(label) = \
		if (NFLAG ^ ZFLAG) == 0 then \
			PC = PC + (2*(label)); \
		else \
			PC = PC + 2; 

macro JL(label) = \
		if (NFLAG ^ ZFLAG) == 1 then \
			PC = PC + (2*(label)); \
		else \
			PC = PC + 2; 

macro JMP(label) = \
		PC = PC + (2*(label)); 
		
macro JN(label) = \
		if NFLAG == 1 then \
			PC = PC + (2*(label)); \
		else \
			PC = PC + 2; 

macro JNC(label) = \
		if CFLAG == 0 then \
			PC = PC + (2*(label)); \
		else \
			PC = PC + 2; 

macro JNZ(label) = \
		if ZFLAG == 0 then \
			PC = PC + (2*(label)); \
		else \
			PC = PC + 2; 

macro  MOV(dest,src) = \
		Set_MSP_GPR(dest,src);

//macro NOP;

macro POP(dest) = \
		TMP_REG1 = M[SP]; \
		SP = SP + 2; \
		Set_MSP_GPR(dest,TMP_REG1); 

macro PUSH(dest) = \
		SP = SP - 2; \
		Set_MSP_GPR(dest,M[SP]);

macro RET = \
	M[SP] = PC<15..0>; \
	PC<19:16> = 0; \
	SP = SP + 2;

macro RETI = \
	M[SP] = SR<15..0>; \
	PC<19:16> = 0; \
	SP = SP + 2;

macro RLA(dest) = \
		TMP_REG1 = Get_MSP_GPR(dest);\
		carry = TMP_REG1<15..15>;\		
		TMP_REG2 = TMP_REG1<<1;\
		Set_MSP_GPR(dest,TMP_REG2);\
		if SBIT(TMP_REG2) == 1 then \
			NFLAG = TMP_REG2<15..15>; \
		else \
			NFLAG = 0;\
		endif;\
		if TMP_REG2 == 0 then \
		 	ZFLAG = 1; \
		else \
		        ZFLAG = 0; \
		endif; \
		CFLAG = carry;\
		if (TMP_REG1 >= 0x04000 || TMP_REG1 < 0x0C000) then \
			VFLAG = 1; \
		else \
			VFLAG = 0; 

macro RLC(dest) = \
		TMP_REG1 = Get_MSP_GPR(dest);\
		carry = TMP_REG1<15..15>;\		
		TMP_REG2 = TMP_REG1<<1;\
		TMP_REG2<0..0> = carry;\
		Set_MSP_GPR(dest,TMP_REG2);\
		if SBIT(TMP_REG2) == 1 then \
			NFLAG = TMP_REG2<15..15>; \
		else \
			NFLAG = 0;\
		endif;\
		if TMP_REG2 == 0 then \
		 	ZFLAG = 1; \
		else \
		        ZFLAG = 0; \
		endif; \
		CFLAG = carry;\
		if (TMP_REG1 >= 0x04000 || TMP_REG1 < 0x0C000) then \
			VFLAG = 1; \
		else \
			VFLAG = 0; 

macro RRA(dest) = \
		TMP_REG1 = Get_MSP_GPR(dest);\
		carry = TMP_REG1<0..0>;\		
		TMP_REG2 = TMP_REG1>>1;\
		TMP_REG2<15..15> = TMP_REG1<15..15>;\
		Set_MSP_GPR(dest,TMP_REG2);\
		if SBIT(TMP_REG2) == 1 then \
			NFLAG = TMP_REG2<15..15>; \
		else \
			NFLAG = 0;\
		endif;\
		if TMP_REG2 == 0 then \
		 	ZFLAG = 1; \
		else \
		        ZFLAG = 0; \
		endif; \
		CFLAG = carry;\
		VFLAG = 0; 

macro RRC(dest) = \
		TMP_REG1 = Get_MSP_GPR(dest);\
		carry = TMP_REG1<0..0>;\		
		TMP_REG2 = TMP_REG1>>1;\
		TMP_REG2<15..15> = carry;\
		Set_MSP_GPR(dest,TMP_REG2);\
		if SBIT(TMP_REG2) == 1 then \
			NFLAG = TMP_REG2<15..15>; \
		else \
			NFLAG = 0;\
		endif;\
		if TMP_REG2 == 0 then \
		 	ZFLAG = 1; \
		else \
		        ZFLAG = 0; \
		endif; \
		CFLAG = carry;\
		VFLAG = 0; 

macro SBC(dest) = \
		TMP_REG1 = Get_MSP_GPR(dest);\
		TMP_REG2 = TMP_REG1 + 0xFFFF + carry;\
		Set_MSP_GPR(dest,TMP_REG2);\
		if SBIT(TMP_REG2) == 1 then \
			NFLAG = TMP_REG2<15..15>; \
		else \
			NFLAG = 0;\
		endif;\
		if TMP_REG2 == 0 then \
		 	ZFLAG = 1; \
		else \
		        ZFLAG = 0; \
		endif; \
		CFLAG = CarryFromSub(TMP_REG1,0xFFFF + carry,TMP_REG3); \
		VFLAG = OverflowFromSub(TMP_REG1,0xFFFF + carry,TMP_REG3); 

macro  SETC = \
		CFLAG = 1;\

macro  SETN = \
		NFLAG = 1;\

macro  SETZ = \
		ZFLAG = 1;\

macro SUB(dest, src) = \
		TMP_REG1 = Get_MSP_GPR(dest);\
		TMP_REG2 = Get_MSP_GPR(src);\
		TMP_REG3 = TMP_REG1 - TMP_REG2;\
		Set_MSP_GPR(dest,TMP_REG3);\
		if (TMP_REG2 > TMP_REG1) then \
			NFLAG = TMP_REG3<15..15>; \
		else \
			NFLAG = 0;\
		endif;\
		if TMP_REG3 == 0 then \
		 	ZFLAG = 1; \
		else \
		        ZFLAG = 0; \
		endif; \
		CFLAG = CarryFromSub(TMP_REG2,TMP_REG1,TMP_REG3); \
		if ((TMP_REG2 < 0) && (TMP_REG1 >= 0) && (TMP_REG3 < 0); \
			 VFLAG = 1; \
		else \
			 VFLAG = 0; \
		if ((TMP_REG2 >= 0) && (TMP_REG1 < 0) && (TMP_REG3 > 0); \
			 VFLAG = 1; \
		else \
			 VFLAG = 0; 

macro SUBC(dest, src) = \
		TMP_REG1 = Get_MSP_GPR(dest);\
		TMP_REG2 = Get_MSP_GPR(src);\
		TMP_REG3 = TMP_REG1 - (TMP_REG2 - 1) + carry;\
		Set_MSP_GPR(dest,TMP_REG3);\
		if SBIT(TMP_REG3) == 1 then \
			NFLAG = TMP_REG3<15..15>; \
		else \
			NFLAG = 0;\
		endif;\
		if TMP_REG3 == 0 then \
		 	ZFLAG = 1; \
		else \
		        ZFLAG = 0; \
		endif; \
		CFLAG = CarryFromSub(TMP_REG2,TMP_REG1,TMP_REG3); \
		if ((TMP_REG2 < 0) && (TMP_REG1 >= 0) && (TMP_REG3 < 0); \
			 VFLAG = 1; \
		else \
			 VFLAG = 0; \
		if ((TMP_REG2 >= 0) && (TMP_REG1 < 0) && (TMP_REG3 > 0); \
			 VFLAG = 1; \
		else \
			 VFLAG = 0; 

macro SWPB(dest) = \
		TMP_REG1 = Get_MSP_GPR(dest);\
		TMP_REG2 = TMP_REG1<7..0>;\
		TMP_REG3 = TMP_REG1<15..8>;\
		TMP_REG1<15..8> = TMP_REG2;\
		TMP_REG1<7..0> = TMP_REG3;\
		Set_MSP_GPR(dest,TMP_REG1);

macro SXT(dest) = \
		TMP_REG1 = Get_MSP_GPR(dest); \
		if TMP_REG1<7..7> == 0 then \
			TMP_REG1<19..8> = 000h; \
		else \
			TMP_REG1<19..8> = FFFh;\
		Set_MSP_GPR(dest,TMP_REG1); \
		if SBIT(TMP_REG1) == 1 then \
			NFLAG = TMP_REG2<15..15>; \
		else \
			NFLAG = 0;\
		endif;\
		if TMP_REG1 == 0 then \
		 	ZFLAG = 1; \
		else \
		        ZFLAG = 0; \
		if TMP_REG1 != 0 then \
			CFLAG = 1; \
		else \
			CFLAG = 0; \
		VFLAG = 0;

macro TST(dest) = \
		TMP_REG1 = Get_MSP_GPR(dest);\
		TMP_REG2 = TMP_REG1 + 0xFFFF + 1;\
		Set_MSP_GPR(dest,TMP_REG2);\
		if SBIT(TMP_REG2) == 1 then \
			NFLAG = TMP_REG2<15..15>; \
		else \
			NFLAG = 0;\
		endif;\
		if TMP_REG2 == 0 then \
		 	ZFLAG = 1; \
		else \
		        ZFLAG = 0; \
		endif; \
		CFLAG = 1; \
		VFLAG = 0;


macro XOR(dest,src) = \
		TMP_REG1 = Get_MSP_GPR(dest);\
		TMP_REG2 = Get_MSP_GPR(src);\
		TMP_REG3 = TMP_REG1 | TMP_REG2;\
		Set_MSP_GPR(dest,TMP_REG1 | TMP_REG2);\
		if SBIT(TMP_REG3) == 1 then \
			NFLAG = TMP_REG2<15..15>; \
		else \
			NFLAG = 0;\
		endif;\
		if TMP_REG3 == 0 then \
		 	ZFLAG = 1; \
		else \
		        ZFLAG = 0; \
		if TMP_REG3 != 0 then \
			CFLAG = 1; \
		else \
			CFLAG = 0; \
		if ((TMP_REG1 < 0) && (TMP_REG2 < 0)) \
			VFLAG = 1; \
		else \
			VFLAG = 0;


